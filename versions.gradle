ext.deps = [:]

def versions = [:]

versions.androidGradlePlugin = '4.1.0'

/* AndroidX Jetpack */
versions.coreVersion = '1.3.2'                          // AndroidX core version;
versions.coreKtxVersion = '1.3.2'                       // AndroidX core-ktx version;
versions.supportLibraryVersion = '1.2.0'                // AndroidX support library version;
versions.supportLibraryComponentVersion = '1.0.0'                // AndroidX support library version;
versions.materialVersion = '1.3.0'                      // AndroidX material version;
versions.lifecycleVersion = '2.2.0'                     // AndroidX lifecycle version;
versions.roomVersion = '2.2.0-beta01'                   // AndroidX room version;
versions.constraintLayoutVersion = '2.0.4'              // AndroidX constraint layout version;

/* ReactiveX version, RxKotlin, RxAndroid */
versions.rxKotlinVersion = '2.3.0'                      // RxKotlin version;
versions.rxAndroidVersion = '2.1.1'                     // RxAndroid version;

/* Json libraries, Gson */
versions.gsonVersion = '2.8.5'                          // Gson version;

/* Http, Retrofit2 & OkHttp */
versions.retrofitVersion = '2.5.0'                      // Retrofit2 version;
versions.okHttpVersion = '3.4.1'                       // OkHttpVersion;

/* Kotlin */
versions.kotlinVersion = '1.4.10'                       // kotlin version;
versions.coroutineVersion = '1.1.1'                     // Kotlin Coroutine Version;
versions.ankoVersion = '0.10.8'                         // Anko version;

/* DI(Dependency Injection), Dagger2 */
versions.daggerVersion = '2.20'                         // Dagger version;

/* Image Loader - Glide */
versions.glideVersion = '4.9.0'                         // Glide version;

/* Project build version */
def buildVersions = [:]
buildVersions.compileSdkVersion = 30
buildVersions.minSdkVersion = 21
buildVersions.targetSdkVersion = 30
buildVersions.buildTools = "30.0.3"
ext.buildVersions = buildVersions

def deps = [:]

deps.androidGradlePlugin = "com.android.tools.build:gradle:$versions.androidGradlePlugin"

/* Kotlin */
def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinVersion"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlinVersion"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutineVersion"
deps.kotlin = kotlin

/* Support libraries*/
def support = [:]
support.core = "androidx.core:core:$versions.coreVersion"
support.appCompat = "androidx.appcompat:appcompat:$versions.supportLibraryVersion"
support.recyclerView = "androidx.recyclerview:recyclerview:$versions.supportLibraryComponentVersion"
support.cardView = "androidx.cardview:cardview:$versions.supportLibraryComponentVersion"
support.design = "com.google.android.material:material:$versions.materialVersion"
support.constraintLayout = "androidx.constraintlayout:constraintlayout:$versions.constraintLayoutVersion"
support.coreKtx = "androidx.core:core-ktx:$versions.coreKtxVersion"
deps.support = support

/* Life cycle */
def lifeCycle = [:]
lifeCycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
lifeCycle.viewModel = "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycleVersion"
lifeCycle.viewModelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
lifeCycle.liveData = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycleVersion"
lifeCycle.liveDataKtx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
lifeCycle.liveDataCore = "androidx.lifecycle:lifecycle-livedata-core:$versions.lifecycleVersion"
lifeCycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycleVersion"
lifeCycle.runtimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
lifeCycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycleVersion"
lifeCycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycleVersion"
lifeCycle.common = "androidx.lifecycle:lifecycle-common:$versions.lifecycleVersion"
deps.lifeCycle = lifeCycle

/* Retrofit2 */
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
retrofit.rxJava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofitVersion"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofitVersion"
deps.retrofit = retrofit

/* OkHttp for Retrofit2 */
def okHttp = [:]
okHttp.okHttp = "com.squareup.okhttp3:okhttp:$versions.okHttpVersion"
okHttp.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okHttpVersion"
deps.okHttp = okHttp

/* ReactiveX, e.g. RxJava2, RxKotlin, RxAndroid */
def reactive = [:]
reactive.rxJava = "io.reactivex.rxjava2:rxjava:$versions.rxJavaVersion"
reactive.rxKotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlinVersion"
reactive.rxAndroid = "io.reactivex.rxjava2:rxandroid:$versions.rxAndroidVersion"
deps.reactive = reactive

/* Dagger2 */
def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.daggerVersion"
dagger.android = "com.google.dagger:dagger-android:$versions.daggerVersion"
dagger.androidSupport = "com.google.dagger:dagger-android-support:$versions.daggerVersion"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.daggerVersion"
dagger.androidSupportCompiler = "com.google.dagger:dagger-android-processor:$versions.daggerVersion"
deps.dagger = dagger

/* Glide */
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glideVersion"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glideVersion"
deps.glide = glide

/* Gson */
deps.gson = "com.google.code.gson:gson:$versions.gsonVersion"

/* For testing */
def test = [:]
test.junit = "junit:junit:4.+"
test.liveDataKtx = "com.jraska.livedata:testing-ktx:1.1.0"
test.archCore = "androidx.arch.core:core-testing:2.0.0"
test.assertCore = "org.assertj:assertj-core:3.11.1"
deps.test = test

ext.deps = deps